@startuml
-> AbstractPlatformTransactionManager: rollback()
activate AbstractPlatformTransactionManager #DarkSalmon

    note right of AbstractPlatformTransactionManager #FAEBD7
        *介绍回滚事务的主要逻辑
            ---模板方法调用实现以DataSourceTransactionManager为例
            ---这里只描述了主要步骤，忽略了异常的情况
    end note

    AbstractPlatformTransactionManager -> AbstractPlatformTransactionManager : processRollback()
    activate AbstractPlatformTransactionManager #DarkSalmon

         note right of AbstractPlatformTransactionManager #aqua
                    触发提交后同步回调
                    ---事务同步相关事件
                end note

        AbstractPlatformTransactionManager -> AbstractPlatformTransactionManager : triggerBeforeCompletion()
        activate AbstractPlatformTransactionManager #DarkSalmon
        deactivate AbstractPlatformTransactionManager

        alt 如果存在保存点
            AbstractPlatformTransactionManager -> AbstractTransactionStatus : rollbackToHeldSavepoint()
            activate AbstractTransactionStatus #DarkSalmon
                note right of AbstractTransactionStatus #aqua
                    主要逻辑:
                        1.回滚到保存点
                        2.释放保存点
                        3.清空记录的保存点
                end note
            AbstractTransactionStatus --> AbstractPlatformTransactionManager
            deactivate AbstractTransactionStatus
        else 如果当前是新事务
            AbstractPlatformTransactionManager -> DataSourceTransactionManager : doRollback()
            activate DataSourceTransactionManager #DarkSalmon

                DataSourceTransactionManager -> Connection : rollback()
                activate Connection #DarkSalmon
                    note right of Connection #FF5000
                        回滚事务
                    end note
                Connection --> DataSourceTransactionManager
                deactivate Connection

            DataSourceTransactionManager --> AbstractPlatformTransactionManager
            deactivate DataSourceTransactionManager

        else 其他情况
            note right of AbstractPlatformTransactionManager #aqua
                非独立事务，主要标记状态
            end note

        end


        note right of AbstractPlatformTransactionManager #aqua
            触发提交后同步回调
            ---事务同步相关事件
        end note

        AbstractPlatformTransactionManager -> AbstractPlatformTransactionManager : triggerAfterCompletion()
        activate AbstractPlatformTransactionManager #DarkSalmon
        deactivate AbstractPlatformTransactionManager

        AbstractPlatformTransactionManager -> AbstractPlatformTransactionManager : cleanupAfterCompletion()：提交后资源清理
        activate AbstractPlatformTransactionManager #DarkSalmon
            note right of AbstractPlatformTransactionManager #aqua
                主要逻辑
                    1.标记已提交
                    2.清空绑定在线程中的事务上下文信息
                    3.释放数据库连接资源
                        a.解除线程中绑定的数据库连接
                        b.恢复数据库连接：事务自动提交/隔离级别/只读属性
                        c.归还数据库连接
                    4.线程绑定前一事务数据库连接
                    5.线程绑定前一事务上下文信息
            end note

            AbstractPlatformTransactionManager -> TransactionSynchronizationManager: clear()
            activate TransactionSynchronizationManager #DarkSalmon
            TransactionSynchronizationManager --> AbstractPlatformTransactionManager
            deactivate TransactionSynchronizationManager


            AbstractPlatformTransactionManager -> DataSourceTransactionManager : doCleanupAfterCompletion()
            activate DataSourceTransactionManager #DarkSalmon

                DataSourceTransactionManager -> DataSourceUtils : resetConnectionAfterTransaction()
                activate DataSourceUtils #DarkSalmon
                DataSourceUtils --> DataSourceTransactionManager
                deactivate DataSourceUtils

                DataSourceTransactionManager -> DataSourceUtils : releaseConnection()
                activate DataSourceUtils #DarkSalmon
                DataSourceUtils --> DataSourceTransactionManager
                deactivate DataSourceUtils

            DataSourceTransactionManager --> AbstractPlatformTransactionManager
            deactivate DataSourceTransactionManager

            AbstractPlatformTransactionManager -> AbstractPlatformTransactionManager : resume()
            activate AbstractPlatformTransactionManager #DarkSalmon
            deactivate AbstractPlatformTransactionManager

        deactivate AbstractPlatformTransactionManager

    deactivate AbstractPlatformTransactionManager

<-- AbstractPlatformTransactionManager
deactivate AbstractPlatformTransactionManager

note right of AbstractPlatformTransactionManager #FAEBD7
    *总结
        回滚事务也属于提交的一种，主流程上和正常提交事务有相似的地方。
end note

@enduml