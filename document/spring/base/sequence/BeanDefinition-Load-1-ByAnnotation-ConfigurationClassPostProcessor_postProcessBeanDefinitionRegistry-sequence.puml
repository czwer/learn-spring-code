@startuml

autonumber

-> ConfigurationClassPostProcessor: postProcessBeanDefinitionRegistry()
activate ConfigurationClassPostProcessor #DarkSalmon

    note right of ConfigurationClassPostProcessor #FAEBD7
        *介绍通过注解注册bean定义的过程
        ---这里只描述了主要步骤
    end note

    ConfigurationClassPostProcessor -> ConfigurationClassPostProcessor : processConfigBeanDefinitions()
    activate ConfigurationClassPostProcessor #DarkSalmon

        note right of ConfigurationClassPostProcessor #aqua
            主要逻辑：
                1.解析bean定义中标签
                2.验证解析的bean定义
                3.加载扫描的bean定义
                4.验证所有的含@Configuration标签的类都处理过，如有发现递归处理
        end note

        ConfigurationClassPostProcessor -> ConfigurationClassParser: parse()
        activate ConfigurationClassParser #DarkSalmon

            loop beanDefinitionHolder : configCandidates
                ConfigurationClassParser -> ConfigurationClassParser : processConfigurationClass()
                activate ConfigurationClassParser #DarkSalmon

                    ConfigurationClassParser -> ConfigurationClassParser : asSourceClass()
                    activate ConfigurationClassParser #DarkSalmon
                    deactivate ConfigurationClassParser

                    loop
                        note right of ConfigurationClassParser #aqua
                            1.如存在@PropertySources标签，读取资源注册到Spring容器环境变量中
                            2.如存在@ComponentScans标签，扫描指定包下的注解bean定义
                            3.处理@Import标签
                                ---如果类中其他注解的定义中含有@Import标签，也会处理，比如@EnableCaching
                                    标签含有@Import(CachingConfigurationSelector.class)
                            4.处理@ImportResource标签
                            5.处理@Bean标签
                            6.处理接口中父接口中@Bean标签
                            ---这里忽略了部分循环嵌套，为了便于理解
                        end note

                        ConfigurationClassParser -> ConfigurationClassParser : doProcessConfigurationClass()
                        activate ConfigurationClassParser #DarkSalmon

                            ConfigurationClassParser -> ConfigurationClassParser : processPropertySource()
                            activate ConfigurationClassParser #DarkSalmon
                            deactivate ConfigurationClassParser


                            ConfigurationClassParser -> ComponentScanAnnotationParser: parse()
                            activate ComponentScanAnnotationParser #DarkSalmon

                                ComponentScanAnnotationParser -> ClassPathBeanDefinitionScanner: doScan()
                                activate ClassPathBeanDefinitionScanner #DarkSalmon
                                    note right of ClassPathBeanDefinitionScanner #aqua
                                        <font color=red>包下所有Class,逐个遍历含有像@Controller,@Service,@Repository,</font>
                                        <font color=red>@Aspect,@Component等注解的类，这些都是要注册的bean定义</font>
                                    end note
                                ClassPathBeanDefinitionScanner --> ComponentScanAnnotationParser : Set<BeanDefinitionHolder>
                                deactivate ClassPathBeanDefinitionScanner

                            ComponentScanAnnotationParser --> ConfigurationClassParser : Set<BeanDefinitionHolder>
                            deactivate ComponentScanAnnotationParser

                            note right of ConfigurationClassParser #aqua
                                每个扫描到的类也做同样的递归处理
                            end note
                            loop
                                ConfigurationClassParser -> ConfigurationClassParser : processConfigurationClass()
                                activate ConfigurationClassParser #DarkSalmon

                                deactivate ConfigurationClassParser
                            end

                            ConfigurationClassParser -> ConfigurationClassParser : processImports()
                            activate ConfigurationClassParser #DarkSalmon

                                ConfigurationClassParser -> ImportSelector : selectImports()
                                activate ImportSelector #DarkSalmon
                                    note right of ImportSelector #aqua
                                        对@EnableCaching类似标签语义的生效起重要作用
                                        ---注入基础设施Bean定义
                                        ---扩展点之一，支持第三方提供类似的@Enablexxx注解能力
                                    end note
                                ImportSelector --> ConfigurationClassParser
                                deactivate ImportSelector


                            deactivate ConfigurationClassParser


                        deactivate ConfigurationClassParser
                    end

                deactivate ConfigurationClassParser
            end

            note right of ConfigurationClassParser #aqua
                最后处理处理延迟类型的ImportSelector：DeferredImportSelector，也涉及标签解析
            end note
            ConfigurationClassParser -> ConfigurationClassParser : processDeferredImportSelectors()
            activate ConfigurationClassParser #DarkSalmon
            deactivate ConfigurationClassParser

        ConfigurationClassParser --> ConfigurationClassPostProcessor
        deactivate ConfigurationClassParser

        ConfigurationClassPostProcessor -> ConfigurationClassParser: validate()
        activate ConfigurationClassParser #DarkSalmon
        ConfigurationClassParser --> ConfigurationClassPostProcessor
        deactivate ConfigurationClassParser

        ConfigurationClassPostProcessor -> ConfigurationClassBeanDefinitionReader: loadBeanDefinitions()
        activate ConfigurationClassBeanDefinitionReader #DarkSalmon

            ConfigurationClassPostProcessor -> ConfigurationClassPostProcessor: loadBeanDefinitions()
            activate ConfigurationClassPostProcessor #DarkSalmon

                ConfigurationClassBeanDefinitionReader -> ConfigurationClassBeanDefinitionReader: loadBeanDefinitionsForBeanMethod()
                activate ConfigurationClassBeanDefinitionReader #DarkSalmon
                deactivate ConfigurationClassBeanDefinitionReader

                ConfigurationClassBeanDefinitionReader -> ConfigurationClassBeanDefinitionReader: loadBeanDefinitionsFromImportedResources()
                activate ConfigurationClassBeanDefinitionReader #DarkSalmon
                deactivate ConfigurationClassBeanDefinitionReader

                note right of ConfigurationClassBeanDefinitionReader #aqua
                    调用实现ImportBeanDefinitionRegistrar.registerBeanDefinitions()方法
                    ---扩展点之一，自定义注册逻辑
                end note
                ConfigurationClassBeanDefinitionReader -> ConfigurationClassBeanDefinitionReader: loadBeanDefinitionsFromRegistrars()
                activate ConfigurationClassBeanDefinitionReader #DarkSalmon
                deactivate ConfigurationClassBeanDefinitionReader

            deactivate ConfigurationClassPostProcessor

        ConfigurationClassBeanDefinitionReader --> ConfigurationClassPostProcessor
        deactivate ConfigurationClassBeanDefinitionReader

    deactivate ConfigurationClassPostProcessor

<-- ConfigurationClassPostProcessor
deactivate ConfigurationClassPostProcessor

note right of ConfigurationClassPostProcessor #FAEBD7
*总结
    1.主要是实现注解语义，及对发现的bean做同样的操作。
        ---基础设置的注入中也起到重要作用。
        ---整个解析过程，涉及大量的递归和循环。
        ---扩展点之一，支持第三方提供类似的@Enablexxx注解能力，和自定义注册逻辑
    2.Bean定义最终注册在：DefaultListableBeanFactory的
        Map<String, BeanDefinition> beanDefinitionMap变量中，与xml注册在同样的地方
    3.注解与xml是不冲突的，是两者分别用到的解析器：
        ComponentScanAnnotationParser.parse：注解解析
        ComponentScanBeanDefinitionParser.parse：xml解析
        ---底层共用了ClassPathBeanDefinitionScanner
end note

@enduml