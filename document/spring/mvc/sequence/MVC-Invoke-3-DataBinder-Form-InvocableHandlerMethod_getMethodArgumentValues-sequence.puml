@startuml
autonumber

-> InvocableHandlerMethod: getMethodArgumentValues()
activate InvocableHandlerMethod #DarkSalmon

    note right of InvocableHandlerMethod #FAEBD7
        *介绍Web请求时Form数据绑定。
            ---这里只描述了主要步骤
    end note

    note right of InvocableHandlerMethod #aqua
        获取当前方法所有参数
        ---我们暂理解为Vo
    end note

    InvocableHandlerMethod -> HandlerMethod : getMethodParameters():获得方法参数信息
    activate HandlerMethod #DarkSalmon
    HandlerMethod --> InvocableHandlerMethod : MethodParameter[]
    deactivate HandlerMethod

    loop
        note right of InvocableHandlerMethod #aqua
            主要业务逻辑：
                1.获取支持当前参数的HandlerMethodArgumentResolver进行参数解析；
                    ---用到ServletModelAttributeMethodProcessor
                2.通过BeanUtils根据Class信息实例化对象
                3.通过DataBinderFactory构建WebDataBinder；
                    ---用到ServletRequestDataBinderFactory
                    ---用到ExtendedServletRequestDataBinder
                4.最终通过BeanWrapperImpl来绑定参数到Vo中，BeanWrapperImpl也是最终
                    通过反射来完成；
                    ---只要匹配通过循环参数尽可能的都设置到Vo内
                5.如有必要调用验证框架进行验证
                ---时序图简化的较多
        end note


        InvocableHandlerMethod -> HandlerMethodArgumentResolverComposite: resolveArgument()：解析参数
        activate HandlerMethodArgumentResolverComposite #DarkSalmon

            HandlerMethodArgumentResolverComposite -> HandlerMethodArgumentResolverComposite: getArgumentResolver()：
            activate HandlerMethodArgumentResolverComposite #DarkSalmon
            deactivate HandlerMethodArgumentResolverComposite

            HandlerMethodArgumentResolverComposite -> ServletModelAttributeMethodProcessor: resolveArgument()
            activate ServletModelAttributeMethodProcessor #DarkSalmon

                ServletModelAttributeMethodProcessor -> ServletModelAttributeMethodProcessor : createAttribute()：实例化对象
                activate ServletModelAttributeMethodProcessor #DarkSalmon
                deactivate ServletModelAttributeMethodProcessor

                ServletModelAttributeMethodProcessor -> DataBinder :doBind()
                activate DataBinder #DarkSalmon

                    DataBinder -> DataBinder :applyPropertyValues()
                    activate DataBinder #DarkSalmon

                        DataBinder -> BeanWrapperImpl :setPropertyValues()
                        activate BeanWrapperImpl #DarkSalmon
                            note right of BeanWrapperImpl #FF5000
                               数据类型转换，反射调用设置值
                            end note

                        BeanWrapperImpl --> DataBinder
                        deactivate BeanWrapperImpl

                    deactivate DataBinder

                DataBinder --> ServletModelAttributeMethodProcessor
                deactivate DataBinder

                note right of ServletModelAttributeMethodProcessor #aqua
                   如有必要调用验证框架进行验证
                end note
                ServletModelAttributeMethodProcessor -> ServletModelAttributeMethodProcessor : validateIfApplicable()
                activate ServletModelAttributeMethodProcessor #DarkSalmon

                    ServletModelAttributeMethodProcessor -> DataBinder :validate()
                    activate DataBinder #DarkSalmon
                    DataBinder --> ServletModelAttributeMethodProcessor
                    deactivate DataBinder

                deactivate ServletModelAttributeMethodProcessor

            ServletModelAttributeMethodProcessor --> HandlerMethodArgumentResolverComposite : Object
            deactivate ServletModelAttributeMethodProcessor

        HandlerMethodArgumentResolverComposite --> InvocableHandlerMethod : Object
        deactivate HandlerMethodArgumentResolverComposite


    end

   
<-- InvocableHandlerMethod : Object[]
deactivate InvocableHandlerMethod

note right of InvocableHandlerMethod #FAEBD7
    *总结
        1.简单理解是获取接口中参数和请求的参数进行匹配，匹配成功的通过反射进行赋值。
        2.Web请求参数绑定和Bean参数绑定通过BeanWrapperImpl复用了基础设施。
    *备注
        1.ServletModelAttributeMethodProcessor
            ---Form表单提交
end note

@enduml